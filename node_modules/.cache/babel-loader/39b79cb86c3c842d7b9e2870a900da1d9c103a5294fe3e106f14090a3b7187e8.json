{"ast":null,"code":"var _jsxFileName = \"/Users/abhijita/Desktop/government-dashboard/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const login = async (email, password) => {\n    setIsLoading(true);\n    try {\n      // Demo login\n      if (email === 'admin@gov.in' && password === 'admin123') {\n        const mockUser = {\n          id: '1',\n          email: 'admin@gov.in',\n          name: 'System Administrator',\n          role: 'admin'\n        };\n        setUser(mockUser);\n      } else {\n        throw new Error('Invalid credentials');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    userRole: (user === null || user === void 0 ? void 0 : user.role) || 'viewer',\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Zl4aE56CGbXdDoToH9D5SNkGHyo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","login","email","password","mockUser","id","name","role","Error","logout","value","isAuthenticated","userRole","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhijita/Desktop/government-dashboard/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, ReactNode } from 'react';\nimport { User, UserRole, AuthState } from '../types/auth';\n\ninterface AuthContextType extends AuthState {\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  userRole: UserRole;\n}\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const login = async (email: string, password: string) => {\n    setIsLoading(true);\n    try {\n      // Demo login\n      if (email === 'admin@gov.in' && password === 'admin123') {\n        const mockUser: User = {\n          id: '1',\n          email: 'admin@gov.in',\n          name: 'System Administrator',\n          role: 'admin'\n        };\n        setUser(mockUser);\n      } else {\n        throw new Error('Invalid credentials');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    userRole: user?.role || 'viewer',\n    login,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlE,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAA8BK,SAAS,CAAC;AAEhF,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvDH,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF;MACA,IAAIE,KAAK,KAAK,cAAc,IAAIC,QAAQ,KAAK,UAAU,EAAE;QACvD,MAAMC,QAAc,GAAG;UACrBC,EAAE,EAAE,GAAG;UACPH,KAAK,EAAE,cAAc;UACrBI,IAAI,EAAE,sBAAsB;UAC5BC,IAAI,EAAE;QACR,CAAC;QACDT,OAAO,CAACM,QAAQ,CAAC;MACnB,CAAC,MAAM;QACL,MAAM,IAAII,KAAK,CAAC,qBAAqB,CAAC;MACxC;IACF,CAAC,SAAS;MACRR,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnBX,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMY,KAAK,GAAG;IACZb,IAAI;IACJc,eAAe,EAAE,CAAC,CAACd,IAAI;IACvBE,SAAS;IACTa,QAAQ,EAAE,CAAAf,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,IAAI,KAAI,QAAQ;IAChCN,KAAK;IACLQ;EACF,CAAC;EAED,oBACElB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAAf,QAAA,EAChCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,EAAA,CA1CWF,YAA+C;AAAAwB,EAAA,GAA/CxB,YAA+C;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}